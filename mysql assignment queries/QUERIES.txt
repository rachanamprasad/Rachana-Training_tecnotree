// QUERIES
1. Select employees first name, last name, job_id and salary whose first
name starts with alphabet S
SELECT first_name, last_name, job_id, salary
FROM employees
WHERE first_name LIKE 'S%'

2.Write a query to select employee with the highest salary
SELECT *
FROM employees
WHERE salary = (SELECT MAX(salary) FROM employees)

3.Select employee with the second highest salary
SELECT *
FROM employees
WHERE salary = (
  SELECT MAX(salary)
  FROM employees
  WHERE salary < (
    SELECT MAX(salary)
    FROM employees
  )
)

4.Fetch employees with 2nd or 3rd highest salary
SELECT *
FROM employees
WHERE salary = (
  SELECT DISTINCT salary
  FROM employees
  ORDER BY salary DESC
  LIMIT 1 OFFSET 1
) OR salary = (
  SELECT DISTINCT salary
  FROM employees
  ORDER BY salary DESC
  LIMIT 1 OFFSET 2
)

5.Write a query to select employees and their corresponding managers
and their salaries
SELECT e.first_name AS employee_first_name, e.last_name AS employee_last_name, e.salary AS employee_salary,
       m.first_name AS manager_first_name, m.last_name AS manager_last_name, m.salary AS manager_salary
FROM employees e
LEFT JOIN employees m ON e.manager_id = m.employee_id

6.Write a query to show count of employees under each manager in
descending order
SELECT m.employee_id AS manager_id, m.first_name AS manager_first_name, m.last_name AS manager_last_name, COUNT(*) AS employee_count
FROM employees e
JOIN employees m ON e.manager_id = m.employee_id
GROUP BY m.employee_id
ORDER BY employee_count DESC

7.Find the count of employees in each department
SELECT d.department_name, COUNT(*) AS employee_count
FROM employees e
JOIN departments d ON e.department_id = d.department_id
GROUP BY d.department_name

8.Get the count of employees hired year wise
SELECT YEAR(hire_date) AS hire_year, COUNT(*) AS employee_count
FROM employees
GROUP BY YEAR(hire_date)

9.Find the salary range of employees
SELECT MIN(salary) AS min_salary, MAX(salary) AS max_salary
FROM employees

10.Write a query to divide people into three groups based on their salaries
SELECT 
  CASE
    WHEN salary >= 20000 THEN 'High'
    WHEN salary >= 10000 AND salary < 20000 THEN 'Medium'
    ELSE 'Low'
  END AS salary_group,
  COUNT(*) AS employee_count
FROM employees
GROUP BY salary_group

11.Select the employees whose first_name contains “an”
SELECT * 
FROM employees 
WHERE first_name LIKE '%an%'

12.Select employee first name and the corresponding phone number in the
format (_ _ _)-(_ _ _)-(_ _ _ _)
SELECT 
  first_name, 
  CONCAT('(', SUBSTR(phone_number, 1, 3), ')-', SUBSTR(phone_number, 4, 3), '-', SUBSTR(phone_number, 7, 4)) AS formatted_phone_number
FROM employees
WHERE phone_number IS NOT NULL

13.Find the employees who joined in August, 1994.
SELECT * 
FROM employees 
WHERE hire_date >= '1994-08-01' 
AND hire_date <= '1994-08-31';

14.Write an SQL query to display employees who earn more than the
average salary in that company
SELECT 
  first_name, 
  last_name, 
  salary 
FROM employees 
WHERE salary > (SELECT AVG(salary) FROM employees)

15.Find the maximum salary from each department
SELECT 
  department_id, 
  MAX(salary) AS max_salary
FROM employees 
GROUP BY department_id

16. Write a SQL query to display the 5 least earning employees
SELECT 
  first_name, 
  last_name, 
  salary 
FROM employees 
ORDER BY salary ASC 
LIMIT 5

17.Find the employees hired in the 80s
SELECT 
  first_name, 
  last_name, 
  hire_date 
FROM employees 
WHERE hire_date BETWEEN '1980-01-01' AND '1989-12-31'

18.Display the employees first name and the name in reverse order
SELECT first_name, CONCAT(REVERSE(last_name), ', ', REVERSE(first_name)) AS name_reverse
FROM employees;

19.Find the employees who joined the company after 15th of the month
SELECT *
FROM employees
WHERE DAY(hire_date) > 15

20.Display the managers and the reporting employees who work in
different departments
SELECT 
    m.first_name AS manager_first_name,
    m.last_name AS manager_last_name,
    e.first_name AS employee_first_name,
    e.last_name AS employee_last_name,
    d1.department_name AS manager_department,
    d2.department_name AS employee_department
FROM 
    employees e
    JOIN employees m ON e.manager_id = m.employee_id
    JOIN departments d1 ON m.department_id = d1.department_id
    JOIN departments d2 ON e.department_id = d2.department_id
WHERE 
    d1.department_name <> d2.department_name;




